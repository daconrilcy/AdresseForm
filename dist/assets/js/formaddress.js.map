{"version":3,"sources":["AdressFrom.js"],"names":["divAddressName","inputAddressTagName","divParentAddressChoixName","inputAddressRefTagName","inputAddressNoTagName","inputAddressStreetTagName","inputAddressLatTagName","inputAddressLonTagName","typageAddressChoix","divZipCodeName","inputZipCodeTagName","divParenttZipCodeChoixName","typageZipCodeChoix","divCityName","inputCityTagName","divParentCityChoixName","typageCityChoix","inputCityCodeTagName","classNameDivChoixParent","classNameDivChild","inputTagAuto","inputTagName","divTagType","tagsNamesAddressChild","id","no","street","zipcode","codecity","city","lon","lat","short","long","tagsNamesGeoChild","departcode","departnom","FiedsNamesAddressJson","FieldsNameGeoJson","nonAutoDefaultValue","FormAddrDefaultTimout","NbMaxAddressReturnJson","NbMaxZipCodeReturnJson","NbMaxCityReturnJson","miniInput","classShow","ApiGouv","async","val","fetch","method","then","response","json","adress","this","getAdressBrute","results","resultsFormatted","datas","length","forEach","data","tmpObj","checkValidityValue","push","getCityFromZipBrut","formatedValuesFromGeo","getCityFromCityBrute","newResults","checkCityZipCodes","rslt","result","hasOwnProperty","cp","tmp","r","objValue","i","undefined","inputValue","idTag","getAddressData","getCityFromZip","getCityFromCity","DivManagement","div","parent","className","constructor","parentName","createFrame","document","createElement","setClass","setId","getElementById","attachToParent","appendChild","getDiv","addClass","classList","add","removeClass","remove","putText","texToAdd","childNodes","textContent","idAlea","setAttribute","getId","show","hide","DivChoixParent","super","divParentAddressChoix","divParentZipCodeChoix","divParentCityChoix","DivChoixChild","typeChild","jsonStruct","tagNamesStruct","txtNd","createTextNode","setDatas","getDatas","setTextContent","text","getTextContent","divChoixAdressChild","setTextFromAddres","address","divChoixZipCodeChild","divChoixCityChild","TextAffich","FullChoixFormAddress","childs","type","selectedChild","nChildAffich","createParentChildrenChoix","createEmptyChildrenChoixAddress","createEmptyChildrenChoixZipCode","createEmptyChildrenChoixCity","addChilds","child","n","fillChilds","l","affichChilds","hideChilds","setSelectedChild","getDatafromId","phrase","Math","floor","random","FormActions","all","actual","ag","inputs","lastInputValues","fromToTag","FormAddressInputs","actionsClickInput","idtag","difVal","getValueIdTag","getDataIdTag","actionsClickOnChoix","from","fillInputsfrom","actionClickOther","a","onInput","setNaInput","addlisteners","fA","addEventListener","event","target","getAttribute","setTimeout","lenValue","value","inputToFill","inputAddress","inputRefAddress","inputNoAddress","inputStreetAddress","inputLatAddress","inputLonAddress","inputZipCode","inputCityCode","inputCity","fromInput","jsonType","getElementsByTagName","inpid","validateInputZipCodeValueFrom","fillAllAddressInputs","setInputAddressAutoTrue","fillZipCode","condtionToFillZipCode","tg","setInputZipCodeAutoTrue","fillAllCity","condtionToFillCity","c","o","setInputCityAutoTrue","adressNASemi","zipCodeNA","setInputZipCodeAutoFalse","cityNA","setInputCityAutoFalse","setInputAddressAutoFalse","addressNA","setInputAddressAuto","setInputZipCodeAuto","setInputCityAuto"],"mappings":"OAEO,MAAMA,eAAgC,mBACtC,MAAMC,oBAAgC,sBACtC,MAAMC,0BAAgC,yBACtC,MAAMC,uBAAgC,yBACtC,MAAMC,sBAAgC,wBACtC,MAAMC,0BAAgC,4BACtC,MAAMC,uBAAgC,yBACtC,MAAMC,uBAAgC,yBACtC,MAAMC,mBAAgC,0BAGtC,MAAMC,eAA+B,oBACrC,MAAMC,oBAA+B,sBACrC,MAAMC,2BAA+B,yBACrC,MAAMC,mBAA+B,0BAGrC,MAAMC,YAA+B,iBACrC,MAAMC,iBAA+B,mBACrC,MAAMC,uBAA+B,sBACrC,MAAMC,gBAA+B,uBACrC,MAAMC,qBAA+B,uBAGrC,MAAMC,wBAA+B,qCACrC,MAAMC,kBAA+B,gBAGrC,MAAMC,aAA+B,mBACrC,MAAMC,aAA+B,mBACrC,MAAMC,WAA+B,mBAGrC,MAAMC,sBAA+B,CACxCC,GAAI,UACJC,GAAI,UACJC,OAAQ,cACRC,QAAS,eACTC,SAAS,gBACTC,KAAK,YACLC,IAAI,WACJC,IAAI,WACJC,MAAM,aACNC,KAAK,eAGF,MAAMC,kBAA+B,CACxCP,QAAQ,eACRC,SAAS,gBACTC,KAAK,YACLM,WAAW,kBACXC,UAAW,yBAIR,MAAMC,sBAA+B,CACxCb,GAAG,KACHC,GAAG,KACHC,OAAO,SACPC,QAAQ,UACRC,SAAS,WACTC,KAAK,OACLC,IAAI,MACJC,IAAI,MACJC,MAAM,QACNC,KAAK,eAEF,MAAMK,kBAA+B,CACxCX,QAAQ,UACRC,SAAS,WACTC,KAAK,OACLM,WAAW,aACXC,UAAU,oBAIP,MAAMG,oBAA+B,aACrC,MAAMC,sBAA+B,WACrC,MAAMC,uBAA+B,UACrC,MAAMC,uBAA+B,UACrC,MAAMC,oBAA+B,UACrC,MAAMC,UAAY,CACrB3C,oBAAsB,EACtBS,oBAAsB,EACtBI,iBAAkB,UAGf,MAAM+B,UAAY,cAElB,MAAMC,QAAU,MACnBC,yBAAyBC,GAErB,OAAOC,MADG,+CAA+CD,EAA/C,gDACO,CAACE,OAAQ,QACrBC,MAAKC,GAAkBA,EAASC,QAEzC,CACAN,2BAA2BC,GAEvB,OAAOC,MADI,wCAAwCD,EAAxC,6DACM,CAACE,OAAQ,QACrBC,MAAKC,GAAkBA,EAASC,QACzC,CACAN,qBAAsBC,GAElB,OAAOC,MADG,8CAA8CD,EAA9C,YACO,CAACE,OAAO,QACpBC,MAAKC,GAAoBA,EAASC,QAC3C,CACAN,qBAAqBO,GACjB,OAAOC,KAAKC,eAAeF,GACtBH,MAAKM,IACF,IAAIC,EAAmB,GACnBC,EAAQF,EAAkB,SAkB9B,OAjBIE,EAAMC,OAAS,GACfD,EAAME,SAAQC,IACV,IAAIC,EAAS,CAAC,EACdA,EAAOvC,GAAkBsC,EAAiB,WAAM,GAChDC,EAAOtC,GAAkBqC,EAAiB,WAAe,YACzDC,EAAOrC,OAAkBoC,EAAiB,WAAU,OACpDC,EAAOpC,QAAkBmC,EAAiB,WAAY,SACtDC,EAAOnC,SAAkBkC,EAAiB,WAAY,SACtDC,EAAOlC,KAAkBiC,EAAiB,WAAQ,KAClDC,EAAOhC,IAAkB+B,EAAe,SAAe,YAAE,GACzDC,EAAOjC,IAAkBgC,EAAe,SAAe,YAAE,GACzDC,EAAO/B,MAAkB8B,EAAiB,WAAQ,KAClDC,EAAO9B,KAAkB6B,EAAiB,WAAS,MACnDC,EAASR,KAAKS,mBAAmBD,GACjCL,EAAiBO,KAAKF,EAAO,IAG9BL,CAAgB,GAKnC,CAEAX,qBAAqBpB,GACjB,OAAO4B,KAAKW,mBAAmBvC,GAC1BwB,MAAKM,GAAiBF,KAAKY,sBAAsBV,EAAQ9B,IAClE,CACAoB,sBAAsBlB,GAClB,OAAO0B,KAAKa,qBAAqBvC,GAC5BsB,MAAKM,IACF,IAAIY,EAAad,KAAKe,kBAAkBb,GACxC,OAAOF,KAAKY,sBAAsBE,EAAW,GAEzD,CACAC,kBAAkBb,GACd,IAAIc,EAAO,GAmBX,OAlBId,EAAQG,OAAS,GACjBH,EAAQI,SAAQW,IACZ,GAAIA,EAAOC,eAAe,gBACtB,IAAK,IAAIC,KAAMF,EAAqB,aAChC,GAAIA,EAAqB,aAAEC,eAAeC,GAAK,CAC3C,IAAIC,EAAM,CAAC,EACX,IAAK,IAAIC,KAAKJ,EACNA,EAAOC,eAAeG,KACtBD,EAAIC,GAAKJ,EAAOI,IAGxBD,EAAkB,aAAIH,EAAqB,aAAEE,GAC7CH,EAAKN,KAAKU,EACd,CAER,IAGDJ,CACX,CACAJ,sBAAsBV,EAAQ,GAAI9B,EAAS,IACvC,IAAI+B,EAAmB,GAiBvB,OAhBID,EAAQG,OAAS,GACjBH,EAAQI,SAAQC,IACZ,IAAIC,EAAS,CAAC,EACVD,EAAKW,eAAe,gBACpBV,EAAQzB,kBAAkBX,SAAemC,EAAmB,aAE5DC,EAAQzB,kBAAkBX,SAAoBA,EAElDoC,EAAQzB,kBAAkBT,MAAoBiC,EAAU,IACxDC,EAAQzB,kBAAkBV,UAAoBkC,EAAW,KACzDC,EAAQzB,kBAAkBH,YAAoB2B,EAAkB,YAAQ,KACxEC,EAAQzB,kBAAkBF,WAAoB0B,EAAkB,YAAO,IACvEC,EAASR,KAAKS,mBAAmBD,GACjCL,EAAiBO,KAAKF,EAAO,IAG9BL,CACX,CACAM,mBAAmBa,GACf,IAAI,IAAIC,KAAKD,EACLA,EAASJ,eAAeK,UACLC,IAAhBF,EAASC,IAAoC,OAAhBD,EAASC,KACrCD,EAASC,GAAK,KAI1B,OAAOD,CACX,CACA9B,mBAAmBiC,EAAYC,GAC3B,OAAOA,GACH,IAvMiC,eAwM7B,OAAO1B,KAAK2B,eAAeF,GAC/B,IA9LgC,eA+L5B,OAAOzB,KAAK4B,eAAeH,GAC/B,IA1LgC,YA2L5B,OAAOzB,KAAK6B,gBAAgBJ,GAExC,GAGJ,MAAMK,cAAgB,MAClBC,GACAC,GACAC,GACAhE,GACAiE,YAAYjE,EAAIkE,EAAYF,GAAWjC,KAAKoC,YAAYnE,EAAIkE,EAAYF,EAAW,CAEnFG,YAAYnE,EAAIkE,EAAYF,GACxBjC,MAAK+B,EAAOM,SAASC,cAAc,OACnCtC,KAAKuC,SAASN,GACdjC,MAAK+B,EAAKE,UAAUA,EACpBjC,KAAKwC,MAAMvE,GACX+B,MAAKgC,EAAUK,SAASI,eAAeN,EAC3C,CACAO,eAAeP,EAAY,IACJ,KAAfA,IAAoBnC,MAAKgC,EAAUK,SAASI,eAAeN,IAC1C,OAAjBnC,MAAKgC,QAAqCR,IAAjBxB,MAAKgC,GAC9BhC,MAAKgC,EAAQW,YAAY3C,MAAK+B,EAEtC,CACAa,SAAS,OAAO5C,MAAK+B,CAAK,CAC1BQ,SAASN,GACLjC,MAAKiC,EAAaA,EAClBjC,MAAK+B,EAAKE,UAAYA,CAC1B,CACAY,SAASZ,GACLjC,MAAK+B,EAAKe,UAAUC,IAAId,GACxBjC,MAAKiC,EAAajC,MAAK+B,EAAKE,SAChC,CACAe,YAAYf,GACRjC,MAAK+B,EAAKe,UAAUG,OAAOhB,GAC3BjC,MAAKiC,EAAajC,MAAK+B,EAAKE,SAChC,CAEAiB,QAAQC,GAAiBnD,MAAK+B,EAAKqB,WAAW,GAAGC,YAAcF,CAAS,CAExEX,MAAMvE,GACCA,SAA0C,KAAPA,IAClCA,EAAKqF,UAETtD,MAAK/B,EAAMA,EACX+B,MAAK+B,EAAK9D,GAAKA,EACf+B,MAAK+B,EAAKwB,aAAa,OAAQtF,EACnC,CACAuF,QAAQ,OAAOxD,MAAK+B,EAAK9D,EAAG,CAE5BwF,OAAOzD,KAAK6C,SAzKS,OAyKW,CAChCa,OAAO1D,KAAKgD,YA1KS,OA0Kc,GAGjCW,eAAiB,cAAc7B,cACjCI,YAAYjE,EAAIkE,GACZyB,MAAM3F,EAAIkE,EAAYxE,yBACtBqC,KAAK0C,eAAeP,EACxB,GAGE0B,sBAAwB,cAAcF,eACxCzB,cAAc0B,MA1Q2B,kBAFA,YA4QsB,GAG7DE,sBAAwB,cAAcH,eACxCzB,cAAc0B,MAnQ0B,kBAFA,aAqQwB,GAG9DG,mBAAqB,cAAcJ,eACrCzB,cAAe0B,MAjQyB,eAFA,UAmQiB,GAG7D,MAAMI,sBAAsBlC,cACxBmC,UACAC,WAAa,CAAC,EACdC,eAAiB,CAAC,EAClB/D,GACAiD,GACAnB,YAAYjE,EAAG,GAAGkE,EAAY8B,EAAWE,EAAiB,CAAC,EAAGD,EAAY,CAAC,GACvEN,MAAM3F,EAAIkE,EArQ0B,UAsQpCnC,KAAKiE,UAAYA,EACjBjE,KAAKmE,eAAiBA,EACtBnE,KAAKkE,WAAaA,EAClBlE,MAAKI,EAAS,CAAC,EACfJ,MAAKqD,EAAe,GACpB,MAAMe,EAAQ/B,SAASgC,eAAe,IACtCrE,KAAK4C,SAASD,YAAYyB,GAC1BpE,KAAK4C,SAASW,aAAaxF,WAAYkG,EAC3C,CAEAK,SAASlE,GACLJ,MAAKI,EAASA,CAClB,CACAmE,WACI,OAAOvE,MAAKI,CAChB,CACAoE,eAAeC,GACXzE,MAAKqD,EAAeoB,CACxB,CAEAvB,UACIlD,KAAK4C,SAASQ,WAAW,GAAGC,YAAcrD,MAAKqD,CACnD,CACAqB,iBACI,OAAO1E,MAAKqD,CAChB,EAIJ,MAAMsB,4BAAkCX,cACpC9B,cAAe0B,MAAM,GA3ToB,kBAMA,mBAqT6B5F,sBAAuBc,sBAAwB,CACrH8F,kBAAkBC,GAAS7E,KAAKwE,eAAeK,EAAQnG,KAAM,EAGjE,MAAMoG,6BAAkCd,cACpC9B,cAAc0B,MAAM,GArToB,kBACA,mBAoT+BjF,kBAAmBI,kBAAmB,CAC7G6F,kBAAkBC,GAAS7E,KAAKwE,eAAeK,EAAQ9F,kBAAkBT,MAAO,EAGpF,MAAMyG,0BAAkCf,cACpC9B,cAAe0B,MAAM,GApTmB,eACA,gBAmTyBjF,kBAAmBI,kBAAmB,CACvG6F,kBAAkBC,GACd,IAAIG,EAAaH,EAAQ9F,kBAAkBT,MAAQ,KAAKuG,EAAQ9F,kBAAkBX,SAAS,MAAQyG,EAAQ9F,kBAAkBF,WAC7HmB,KAAKwE,eAAeQ,EAAY,SAGjC,MAAMC,qBAAuB,MAChCjD,GACAkD,GAAS,GACTC,GACAC,GACAC,GAEAnD,YAAYiD,GACRnF,MAAKmF,EAAQA,EACbnF,MAAKkF,EAAU,GACflF,KAAKsF,2BACT,CACAA,4BACI,OAAQtF,MAAKmF,GACT,IAnViC,mBAoV7BnF,MAAKgC,EAAU,IAAI6B,sBACnB7D,KAAKuF,kCACL,MACJ,IAjVgC,mBAkV5BvF,MAAKgC,EAAU,IAAI8B,sBACnB9D,KAAKwF,kCACL,MACJ,IA/UgC,gBAgV5BxF,MAAKgC,EAAU,IAAI+B,mBACnB/D,KAAKyF,+BAGjB,CACAC,UAAUC,GACN3F,MAAKkF,EAAQxE,KAAKiF,EACtB,CACAJ,kCACI,IAAI,IAAIK,EAAI,EAAGA,EA/RqB,GA+ROA,IAAI,CAC3C,IAAIxE,EAAM,IAAIuD,oBACd3E,KAAK0F,UAAUtE,EACnB,CACJ,CACAoE,kCACI,IAAI,IAAII,EAAI,EAAGA,EApSqB,GAoSOA,IAAI,CAC3C,IAAIxE,EAAM,IAAI0D,qBACd9E,KAAK0F,UAAUtE,EACnB,CACJ,CACAqE,+BACI,IAAI,IAAIG,EAAI,EAAGA,EAzSqB,GAySIA,IAAI,CACxC,IAAIxE,EAAM,IAAI2D,kBACd/E,KAAK0F,UAAUtE,EACnB,CACJ,CACAyE,WAAWhB,GACP,GAAGA,EAAQxE,OAAS,EAAE,CAClB,IAAIyF,EAAIjB,EAAQxE,OACZL,MAAKkF,EAAQ7E,OAASwE,EAAQxE,SAC9ByF,EAAI9F,MAAKkF,EAAQ7E,QAErBL,MAAKqF,EAAgBS,EACrB,IAAI,IAAIF,EAAI,EAAGA,EAAI5F,MAAKqF,EAAeO,IACnC5F,MAAKkF,EAAQU,GAAGtB,SAASO,EAAQe,IACjC5F,MAAKkF,EAAQU,GAAGhB,kBAAkBC,EAAQe,IAE9C5F,KAAK+F,cACT,CACJ,CACAA,eACI,IAAI,IAAIH,EAAI,EAAGA,EAAI5F,MAAKqF,EAAeO,IACK,KAApC5F,MAAKkF,EAAQU,GAAGlB,uBAA6ClD,IAApBxB,MAAKkF,EAAQU,IAAwC,OAApB5F,MAAKkF,EAAQU,KACvF5F,MAAKkF,EAAQU,GAAGlD,iBAChB1C,MAAKkF,EAAQU,GAAG1C,UAChBlD,MAAKgC,EAAQyB,OAGzB,CACAuC,aACIhG,MAAKgC,EAAQ0B,MACjB,CACAuC,iBAAiBhI,GACb,IAAI,IAAI2H,EAAI,EAAGA,EAAI5F,MAAKkF,EAAQ7E,OAASuF,IACjC5F,MAAKkF,EAAQU,GAAGpC,UAAYvF,IAC5B+B,MAAKoF,EAAiBpF,MAAKkF,EAAQU,GAG/C,CACAM,cAAcjI,GAEV,OADA+B,KAAKiG,iBAAiBhI,GACf+B,MAAKoF,EAAeb,UAC/B,GAGJ,SAASjB,SACL,MAAM6C,EAAS,uCACf,IAAIlI,EAAK,GACT,IAAK,IAAIsD,EAAI,EAAGA,EAAI,GAAIA,IAAK,CAEzBtD,GAAMkI,EADEC,KAAKC,MAAMD,KAAKE,SAAWH,EAAO9F,QAE9C,CACA,OAAOpC,CACX,QAEO,MAAMsI,YAAc,MACvBC,GACAC,GACAC,GACAC,GACAC,GACAC,UAEA3E,cACIlC,MAAK0G,EAAM,IAAInH,QACfS,MAAK2G,EAAU,IAAIG,kBACnB9G,MAAKwG,EAAO,CAAC,EACbxG,MAAKwG,EAAwB,aAAI,IAAIvB,qBAnbA,oBAobrCjF,MAAKwG,EAAwB,aAAI,IAAIvB,qBA9aD,oBA+apCjF,MAAKwG,EAAqB,UAAO,IAAIvB,qBAzaD,iBA2apCjF,MAAK4G,EAAmB,CAAC,EACzB5G,MAAK4G,EAAoC,aAAO,GAChD5G,MAAK4G,EAAoC,aAAO,GAChD5G,MAAK4G,EAAiC,UAAU,GAEhD5G,KAAK6G,UAAY,CAAC,EAClB7G,KAAK6G,UAA4B,iBApcI,eAqcrC7G,KAAK6G,UAA4B,iBA1bG,eA2bpC7G,KAAK6G,UAAyB,cArbM,WAsbxC,CACAE,kBAAkBC,GACd,IAAIC,GAAS,EACbjH,MAAKyG,EAAUzG,MAAKwG,EAAKQ,GACzB,IAAIvH,EAAMO,MAAK2G,EAAQO,cAAcF,GACjCvH,IAAQO,MAAK4G,EAAiBI,KAAUC,GAAS,GACrDjH,MAAK4G,EAAiBI,GAASvH,EAC3BA,EAAIY,OAAShB,UAAU2H,KAAUC,GAAS,GACtCA,EACAjH,MAAK0G,EAAIS,aAAa1H,EAAKuH,GACtBpH,MAAKqB,GAAUjB,MAAKyG,EAAQZ,WAAW5E,KAE5CjB,MAAKyG,EAAQV,cAGzB,CACAqB,oBAAoBC,EAAMpJ,GACtB,IAAI+I,EAAQhH,KAAK6G,UAAUQ,GACvBjH,EAAQJ,MAAKwG,EAAKQ,GAAOd,cAAcjI,GAC3C+B,MAAK2G,EAAQW,eAAeD,EAAKjH,GACjCJ,MAAKwG,EAAKQ,GAAOhB,YACrB,CACAuB,mBACI,IAAI,IAAIC,KAAKxH,MAAKwG,EACVxG,MAAKwG,EAAKtF,eAAesG,IACzBxH,MAAKwG,EAAKgB,GAAGxB,YAGzB,CACAyB,QAAQT,GACJhH,MAAK2G,EAAQe,WAAWV,GACxBhH,KAAK+G,kBAAkBC,EAC3B,UAIG,SAASW,eACZ,IAAIC,EAAK,IAAIrB,YACblE,SAASwF,iBAAiB,SAAS,SAAUC,GACzC,IAAI7J,EAAK6J,EAAMC,OAAO9J,GAClBoJ,EAAOS,EAAMC,OAAOC,aAAajK,YACjC2D,EAAQoG,EAAMC,OAAOC,aApdW,aA5BC,iBAifjCtG,GAhegC,cAgeCA,GAteD,iBAse+BA,EAC/DkG,EAAGb,kBAlf8B,gBAOA,qBA6e5BM,GAve2B,qBAueIA,GAjeJ,kBAiemCA,EACnEO,EAAGR,oBAAoBC,EAAMpJ,GAG7B2J,EAAGL,kBAGX,IAEAU,YAAW,WACP5F,SAASwF,iBAAiB,SAAS,SAAUC,GACzC,IAAII,EAAWJ,EAAMC,OAAOI,MAAM9H,OAC9BqB,EAAQoG,EAAMC,OAAOC,aApeO,aAqe5BE,EAAW,GACXN,EAAGH,QAAQ/F,EAEnB,GACJ,GAzbwC,IA0b5C,CAEA,IAAI0G,YAAc,CAAC,EAEnBA,YAA8B,iBAAItJ,6BAE3B,MAAMgI,kBAAoB,MAE7BuB,GACAC,GACAC,GACAC,GACAC,GACAC,GAEAC,GAEAC,GACAC,GAEAC,GACAC,GAEA7G,cACI,IAAIyE,EAAStE,SAAS2G,qBAAqB,SAC3C,GAAIrC,EAAOtG,OAAS,EAChB,IAAK,IAAIuF,EAAI,EAAGA,EAAIe,EAAOtG,OAAQuF,IAAK,CACpC,IAAIqD,EAAQtC,EAAOf,GAAGoC,aArgBM,aA5BC,iBAkiBzBiB,IACAjJ,MAAKqI,EAAuB1B,EAAOf,IAjiBV,oBAmiBzBqD,IACAjJ,MAAKsI,EAAmB3B,EAAOf,IAniBN,mBAqiBzBqD,IACAjJ,MAAKuI,EAAkB5B,EAAOf,IAriBL,uBAuiBzBqD,IACAjJ,MAAKwI,EAAsB7B,EAAOf,IAviBT,oBAyiBzBqD,IACAjJ,MAAKyI,EAAmB9B,EAAOf,IAziBN,oBA2iBzBqD,IACAjJ,MAAK0I,EAAmB/B,EAAOf,IAviBP,iBAyiBxBqD,IACAjJ,MAAK2I,EAAgBhC,EAAOf,IAjiBJ,kBAmiBxBqD,IACAjJ,MAAK4I,EAAiBjC,EAAOf,IAviBL,cAyiBxBqD,IACAjJ,MAAK6I,EAAalC,EAAOf,GAEjC,CAEJ5F,MAAK8I,EAAa,CAAC,EACnB9I,MAAK8I,EAA8B,aAAM9I,MAAKqI,EAC9CrI,MAAK8I,EAA8B,aAAM9I,MAAK2I,EAC9C3I,MAAK8I,EAA2B,UAAS9I,MAAK6I,EAE9C7I,MAAK+I,EAAY,CAAC,EAClB/I,MAAK+I,EAA4B,iBAAOjK,sBACxCkB,MAAK+I,EAA4B,iBAAOhK,kBACxCiB,MAAK+I,EAAyB,cAAUhK,iBAC5C,CACAmI,cAAcF,GAEV,OADAhH,KAAKkJ,8BAA8BlC,GAC5BhH,MAAK8I,EAAW9B,GAAOmB,KAClC,CACAe,8BAA8B7B,GAC1B,GAjkBoC,qBAikBhCA,EAA4B,CAC5B,IAAI5H,EAAMO,MAAK2I,EAAcR,MACV,IAAf1I,EAAIY,SACJL,MAAK2I,EAAcR,MAAQ,IAAM1I,EAEzC,CACJ,CACA0J,qBAAqBtE,GACjB7E,MAAKqI,EAAcF,MAAiBtD,EAAQ/F,sBAAsBL,OAClEuB,MAAKsI,EAAiBH,MAActD,EAAQ/F,sBAAsBb,IAClE+B,MAAKuI,EAAgBJ,MAAetD,EAAQ/F,sBAAsBZ,IAClE8B,MAAKwI,EAAoBL,MAAWtD,EAAQ/F,sBAAsBX,QAClE6B,MAAKyI,EAAiBN,MAActD,EAAQ/F,sBAAsBN,KAClEwB,MAAK0I,EAAiBP,MAActD,EAAQ/F,sBAAsBP,KAClEyB,KAAKoJ,yBACT,CACAC,YAAYxE,EAASwC,GACjB,GAAIrH,KAAKsJ,wBAAyB,CAC9B,IAAIC,EAAKvJ,MAAK+I,EAAU1B,GAAMjJ,QAC9B4B,MAAK2I,EAAcR,MAAQtD,EAAQ0E,GACnCvJ,KAAKwJ,yBACT,CACJ,CACAC,YAAY5E,EAASwC,GACjB,GAAGrH,KAAK0J,qBAAqB,CACzB,IAAIC,EAAI3J,MAAK+I,EAAU1B,GAAM/I,KACzBsL,EAAI5J,MAAK+I,EAAU1B,GAAMhJ,SAC7B2B,MAAK4I,EAAeT,MAAQtD,EAAQ+E,GACpC5J,MAAK6I,EAAWV,MAAYtD,EAAQ8E,GACpC3J,KAAK6J,sBACT,CACJ,CACAvC,eAAeD,EAAMjH,GACjB,OAAOiH,GACH,IAzmBiC,mBA0mB7BrH,KAAKmJ,qBAAqB/I,GAC1BJ,KAAKqJ,YAAYjJ,EAAMiH,GACvBrH,KAAKyJ,YAAYrJ,EAAOiH,GACxB,MACJ,IAxmBgC,mBAymB5BrH,MAAK2I,EAAcR,MAAQ,GAC3BnI,KAAKqJ,YAAYjJ,EAAMiH,GACvBrH,KAAKyJ,YAAYrJ,EAAOiH,GACxBrH,KAAK8J,eACL,MACJ,IAxmBgC,gBAymB5B9J,MAAK6I,EAAWV,MAAO,GACvBnI,KAAKqJ,YAAYjJ,EAAMiH,GACvBrH,KAAKyJ,YAAYrJ,EAAOiH,GACxBrH,KAAK8J,eAGjB,CACAR,wBACI,MAAoC,KAA5BtJ,MAAK2I,EAAcR,OAAiE,SAAlDnI,MAAK2I,EAAcX,aAzmBzB,YA0mBxC,CACA0B,qBACI,MAAiC,KAAzB1J,MAAK6I,EAAWV,OAA8D,SAA/CnI,MAAK6I,EAAWb,aA5mBnB,YA6mBxC,CACA+B,YACI/J,KAAKgK,0BACT,CACAC,SACIjK,MAAK4I,EAAgBT,MAlkBe,MAmkBpCnI,KAAKkK,uBACT,CACAJ,eACI9J,MAAKsI,EAAiBH,MAtkBc,MAukBpCnI,KAAKmK,0BACT,CACAC,YACIpK,MAAKsI,EAAiBH,MA1kBc,MA2kBpCnI,MAAKuI,EAAgBJ,MA3kBe,MA4kBpCnI,MAAKwI,EAAoBL,MA5kBW,MA6kBpCnI,MAAKyI,EAAiBN,MA7kBc,MA8kBpCnI,MAAK0I,EAAiBP,MA9kBc,MA+kBpCnI,KAAKmK,0BACT,CACAzC,WAAWV,GACP,OAAQA,GACJ,IA9pBiC,eA+pB7BhH,KAAKoK,YACL,MACJ,IAtpBgC,eAupB5BpK,KAAK+J,YACL,MACJ,IAnpBgC,YAopB5B/J,KAAKiK,SAGjB,CACAI,oBAAoBlC,EAAM,SACtBnI,MAAKqI,EAAc9E,aA/oBiB,YA+oBU4E,EAClD,CACAmC,oBAAoBnC,EAAM,SACtBnI,MAAK2I,EAAcpF,aAlpBiB,YAkpBU4E,EAClD,CACAoC,iBAAiBpC,EAAM,SACnBnI,MAAK6I,EAAWtF,aArpBoB,YAqpBO4E,EAC/C,CACAgC,2BACInK,KAAKqK,oBAAoB,QAC7B,CACAL,2BACIhK,KAAKsK,oBAAoB,QAC7B,CACAJ,wBACIlK,KAAKuK,iBAAiB,QAC1B,CACAnB,0BACIpJ,KAAKqK,oBAAoB,OAC7B,CACAb,0BACIxJ,KAAKsK,oBAAoB,OAC7B,CACAT,uBACI7J,KAAKuK,iBAAiB,OAC1B,GAGJlI,SAASwF,iBAAiB,oBAAoB,WAC1CF,cACJ","file":"formaddress.js","sourcesContent":["\r\n/******************div Adress names ****************************/\r\nexport const divAddressName =                'divadress';\r\nexport const inputAddressTagName =           'inputaddress';\r\nexport const divParentAddressChoixName =     'divaddresschoix';\r\nexport const inputAddressRefTagName =        'inputrefaddress';\r\nexport const inputAddressNoTagName =         'inputnoaddress';\r\nexport const inputAddressStreetTagName =     'inputstreetaddress';\r\nexport const inputAddressLatTagName =        'inputlataddress';\r\nexport const inputAddressLonTagName =        'inputlonaddress';\r\nexport const typageAddressChoix =            'typeaddresschoix';\r\n\r\n/****************** div ZipCode names ***************************/\r\nexport const divZipCodeName =               'divzipcode';\r\nexport const inputZipCodeTagName =          'inputzipcode';\r\nexport const divParenttZipCodeChoixName =   'divzipcodechoix';\r\nexport const typageZipCodeChoix =           'typezipcodechoix';\r\n\r\n/****************** div City names *****************************/\r\nexport const divCityName =                  'divcity';\r\nexport const inputCityTagName =             'inputcity';\r\nexport const divParentCityChoixName =       'divcitychoix';\r\nexport const typageCityChoix =              'typecitychoix';\r\nexport const inputCityCodeTagName =         'inputcodecity';\r\n\r\n/****************** class *************************************/\r\nexport const classNameDivChoixParent =      \"mb-3 dropdown-menu relative\";\r\nexport const classNameDivChild =            'myMenu';\r\n\r\n/****************** general Tags ******************************/\r\nexport const inputTagAuto =                 'data-auto';\r\nexport const inputTagName =                 'data-name';\r\nexport const divTagType =                   'data-type';\r\n\r\n/****************** Childs Tags *******************************/\r\nexport const tagsNamesAddressChild =        {\r\n    id: 'data-id',\r\n    no: 'data-no',\r\n    street: 'data-street',\r\n    zipcode: 'data-zipcode',\r\n    codecity:'data-codecity',\r\n    city:'data-city',\r\n    lon:'data-lon',\r\n    lat:'data-lat',\r\n    short:'data-short',\r\n    long:'text'\r\n};\r\n\r\nexport const tagsNamesGeoChild =            {\r\n    zipcode:'data-zipcode',\r\n    codecity:'data-codecity',\r\n    city:'data-city',\r\n    departcode:'data-departcode',\r\n    departnom: 'data-departnom',\r\n};\r\n\r\n/****************** Fields Json *******************************/\r\nexport const FiedsNamesAddressJson =        {\r\n    id:'id',\r\n    no:'no',\r\n    street:'street',\r\n    zipcode:'zipcode',\r\n    codecity:'codecity',\r\n    city:'city',\r\n    lon:'lon',\r\n    lat:'lat',\r\n    short:'short',\r\n    long:'long'\r\n};\r\nexport const FieldsNameGeoJson =            {\r\n    zipcode:'zipcode',\r\n    codecity:'codecity',\r\n    city:'city',\r\n    departcode:'departcode',\r\n    departnom:'departnom',\r\n};\r\n\r\n/****************** Other *************************************/\r\nexport const nonAutoDefaultValue =          \"NaN\";\r\nexport const FormAddrDefaultTimout =        1000;\r\nexport const NbMaxAddressReturnJson =       15;\r\nexport const NbMaxZipCodeReturnJson =       10;\r\nexport const NbMaxCityReturnJson =          25;\r\nexport const miniInput = {\r\n    inputAddressTagName : 3,\r\n    inputZipCodeTagName : 3,\r\n    inputCityTagName: 2\r\n\r\n}\r\nexport const classShow = \"show\";\r\n\r\nexport const ApiGouv = class{\r\n    async getCityFromZipBrut(val) {\r\n        let url = 'https://geo.api.gouv.fr/communes?codePostal='+val+'&fields=departement&boost=population&limit='+NbMaxZipCodeReturnJson;\r\n        return fetch(url,{method: 'GET'})\r\n            .then(response=>{return response.json()});\r\n\r\n    };\r\n    async getCityFromCityBrute(val){\r\n        let url =  'https://geo.api.gouv.fr/communes?nom='+val+'&fields=departement,codesPostaux&boost=population&limit='+NbMaxCityReturnJson;\r\n        return fetch(url,{method: 'GET'})\r\n            .then(response=>{return response.json()});\r\n    };\r\n    async getAdressBrute (val){\r\n        let url = 'https://api-adresse.data.gouv.fr/search/?q='+val+'&limit='+NbMaxAddressReturnJson;\r\n        return fetch(url,{method:'GET'})\r\n            .then(response => {return response.json()});\r\n    };\r\n    async getAddressData(adress) {\r\n        return this.getAdressBrute(adress)\r\n            .then(results =>{\r\n                let resultsFormatted = [];\r\n                let datas = results['features'];\r\n                if (datas.length > 0) {\r\n                    datas.forEach(data =>{\r\n                        let tmpObj = {};\r\n                        tmpObj.id=               data['properties']['id'];\r\n                        tmpObj.no=               data['properties']['housenumber'];\r\n                        tmpObj.street=           data['properties']['street'];\r\n                        tmpObj.zipcode=          data['properties']['postcode'];\r\n                        tmpObj.codecity=         data['properties']['citycode'];\r\n                        tmpObj.city=             data['properties']['city'];\r\n                        tmpObj.lat=              data['geometry']['coordinates'][1];\r\n                        tmpObj.lon=              data['geometry']['coordinates'][0];\r\n                        tmpObj.short=            data['properties']['name'];\r\n                        tmpObj.long=             data['properties']['label'];\r\n                        tmpObj = this.checkValidityValue(tmpObj);\r\n                        resultsFormatted.push(tmpObj);\r\n                    });\r\n                }\r\n                return resultsFormatted;\r\n\r\n\r\n            });\r\n\r\n    };\r\n\r\n    async getCityFromZip(zipcode){\r\n        return this.getCityFromZipBrut(zipcode)\r\n            .then(results=>{return this.formatedValuesFromGeo(results,zipcode);});\r\n    };\r\n    async getCityFromCity(city) {\r\n        return this.getCityFromCityBrute(city)\r\n            .then(results=>{\r\n                let newResults = this.checkCityZipCodes(results);\r\n                return this.formatedValuesFromGeo(newResults);\r\n            });\r\n    };\r\n    checkCityZipCodes(results){\r\n        let rslt = [];\r\n        if (results.length > 0) {\r\n            results.forEach(result=>{\r\n                if (result.hasOwnProperty('codesPostaux')) {\r\n                    for (let cp in result['codesPostaux']){\r\n                        if (result['codesPostaux'].hasOwnProperty(cp)) {\r\n                            let tmp = {};\r\n                            for (let r in result) {\r\n                                if (result.hasOwnProperty(r)){\r\n                                    tmp[r] = result[r];\r\n                                }\r\n                            }\r\n                            tmp[\"codesPostaux\"] = result['codesPostaux'][cp];\r\n                            rslt.push(tmp);\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        return rslt;\r\n    };\r\n    formatedValuesFromGeo(results=[], zipcode ='') {\r\n        let resultsFormatted = [];\r\n        if (results.length > 0) {\r\n            results.forEach(data=>{\r\n                let tmpObj = {};\r\n                if (data.hasOwnProperty('codesPostaux')){\r\n                    tmpObj[ FieldsNameGeoJson.zipcode] =     data['codesPostaux'];\r\n                }else{\r\n                    tmpObj[ FieldsNameGeoJson.zipcode] =          zipcode;\r\n                }\r\n                tmpObj[ FieldsNameGeoJson.city] =             data['nom'];\r\n                tmpObj[ FieldsNameGeoJson.codecity] =         data['code'];\r\n                tmpObj[ FieldsNameGeoJson.departcode] =       data['departement']['code'];\r\n                tmpObj[ FieldsNameGeoJson.departnom] =        data['departement']['nom'];\r\n                tmpObj = this.checkValidityValue(tmpObj);\r\n                resultsFormatted.push(tmpObj);\r\n            });\r\n        }\r\n        return resultsFormatted;\r\n    };\r\n    checkValidityValue(objValue){\r\n        for(let i in objValue) {\r\n            if (objValue.hasOwnProperty(i)){\r\n                if(objValue[i] === undefined || objValue[i] === null){\r\n                    objValue[i] = '';\r\n                }\r\n            }\r\n        }\r\n        return objValue;\r\n    };\r\n    async getDataIdTag(inputValue, idTag){\r\n        switch(idTag){\r\n            case inputAddressTagName:\r\n                return this.getAddressData(inputValue);\r\n            case inputZipCodeTagName:\r\n                return this.getCityFromZip(inputValue);\r\n            case inputCityTagName:\r\n                return this.getCityFromCity(inputValue);\r\n        }\r\n    };\r\n}\r\n\r\nconst DivManagement = class{\r\n    #div;\r\n    #parent;\r\n    #className;\r\n    #id;\r\n    constructor(id, parentName, className){this.createFrame(id, parentName, className);}\r\n\r\n    createFrame(id, parentName, className){\r\n        this.#div = document.createElement('div');\r\n        this.setClass(className);\r\n        this.#div.className=className;\r\n        this.setId(id);\r\n        this.#parent = document.getElementById(parentName);\r\n    }\r\n    attachToParent(parentName ='') {\r\n        if (parentName !== '') {this.#parent = document.getElementById(parentName);}\r\n        if (this.#parent !== null && this.#parent !== undefined){\r\n            this.#parent.appendChild(this.#div);\r\n        }\r\n    }\r\n    getDiv(){return this.#div;}\r\n    setClass(className){\r\n        this.#className = className;\r\n        this.#div.className = className;\r\n    }\r\n    addClass(className)     {\r\n        this.#div.classList.add(className);\r\n        this.#className = this.#div.className;\r\n    }\r\n    removeClass(className)  {\r\n        this.#div.classList.remove(className);\r\n        this.#className = this.#div.className;\r\n    }\r\n\r\n    putText(texToAdd)       {this.#div.childNodes[0].textContent = texToAdd;}\r\n\r\n    setId(id){\r\n        if(id === null || id === undefined || id === '') {\r\n            id = idAlea();\r\n        }\r\n        this.#id = id;\r\n        this.#div.id = id;\r\n        this.#div.setAttribute('name', id);\r\n    }\r\n    getId(){return this.#div.id;}\r\n\r\n    show(){this.addClass(classShow);}\r\n    hide(){this.removeClass(classShow);}\r\n}\r\n\r\nconst DivChoixParent = class extends DivManagement {\r\n    constructor(id, parentName) {\r\n        super(id, parentName, classNameDivChoixParent);\r\n        this.attachToParent(parentName);\r\n    }\r\n}\r\n\r\nconst divParentAddressChoix = class extends DivChoixParent {\r\n    constructor(){super(divParentAddressChoixName, divAddressName);}\r\n}\r\n\r\nconst divParentZipCodeChoix = class extends DivChoixParent {\r\n    constructor(){super(divParenttZipCodeChoixName, divZipCodeName);}\r\n}\r\n\r\nconst divParentCityChoix = class extends DivChoixParent {\r\n    constructor(){ super(divParentCityChoixName, divCityName)}\r\n}\r\n\r\nclass DivChoixChild extends DivManagement {\r\n    typeChild;\r\n    jsonStruct = {};\r\n    tagNamesStruct = {};\r\n    #datas;\r\n    #textContent;\r\n    constructor(id='',parentName, typeChild, tagNamesStruct = {}, jsonStruct ={}) {\r\n        super(id, parentName, classNameDivChild);\r\n        this.typeChild = typeChild;\r\n        this.tagNamesStruct = tagNamesStruct;\r\n        this.jsonStruct = jsonStruct;\r\n        this.#datas = {};\r\n        this.#textContent = '';\r\n        const txtNd = document.createTextNode('');\r\n        this.getDiv().appendChild(txtNd);\r\n        this.getDiv().setAttribute(divTagType, typeChild);\r\n    }\r\n\r\n    setDatas(datas){\r\n        this.#datas = datas;\r\n    }\r\n    getDatas(){\r\n        return this.#datas;\r\n    }\r\n    setTextContent(text){\r\n        this.#textContent = text;\r\n    }\r\n\r\n    putText(){\r\n        this.getDiv().childNodes[0].textContent = this.#textContent;\r\n    }\r\n    getTextContent(){\r\n        return this.#textContent;\r\n    }\r\n\r\n}\r\n\r\nclass divChoixAdressChild   extends     DivChoixChild {\r\n    constructor(){ super('',divParentAddressChoixName,typageAddressChoix, tagsNamesAddressChild, FiedsNamesAddressJson); }\r\n    setTextFromAddres(address){this.setTextContent(address.long);}\r\n}\r\n\r\nclass divChoixZipCodeChild  extends     DivChoixChild {\r\n    constructor(){super('',divParenttZipCodeChoixName, typageZipCodeChoix, tagsNamesGeoChild, FieldsNameGeoJson);}\r\n    setTextFromAddres(address){this.setTextContent(address[FieldsNameGeoJson.city]);}\r\n}\r\n\r\nclass divChoixCityChild     extends     DivChoixChild {\r\n    constructor() {super('',divParentCityChoixName, typageCityChoix, tagsNamesGeoChild, FieldsNameGeoJson);}\r\n    setTextFromAddres(address){\r\n        let TextAffich = address[FieldsNameGeoJson.city] + \" (\"+address[FieldsNameGeoJson.zipcode]+\"), \" + address[FieldsNameGeoJson.departnom];\r\n        this.setTextContent(TextAffich);}\r\n}\r\n\r\nexport const FullChoixFormAddress = class {\r\n    #parent;\r\n    #childs =[];\r\n    #type;\r\n    #selectedChild;\r\n    #nChildAffich;\r\n\r\n    constructor(type) {\r\n        this.#type = type;\r\n        this.#childs = [];\r\n        this.createParentChildrenChoix();\r\n    }\r\n    createParentChildrenChoix(){\r\n        switch (this.#type) {\r\n            case typageAddressChoix:\r\n                this.#parent = new divParentAddressChoix();\r\n                this.createEmptyChildrenChoixAddress();\r\n                break;\r\n            case typageZipCodeChoix:\r\n                this.#parent = new divParentZipCodeChoix();\r\n                this.createEmptyChildrenChoixZipCode();\r\n                break;\r\n            case typageCityChoix:\r\n                this.#parent = new divParentCityChoix();\r\n                this.createEmptyChildrenChoixCity();\r\n                break;\r\n        }\r\n    }\r\n    addChilds(child){\r\n        this.#childs.push(child);\r\n    }\r\n    createEmptyChildrenChoixAddress(){\r\n        for(let n = 0; n < NbMaxAddressReturnJson; n++){\r\n            let tmp = new divChoixAdressChild();\r\n            this.addChilds(tmp);\r\n        }\r\n    }\r\n    createEmptyChildrenChoixZipCode(){\r\n        for(let n = 0; n < NbMaxZipCodeReturnJson; n++){\r\n            let tmp = new divChoixZipCodeChild();\r\n            this.addChilds(tmp);\r\n        }\r\n    }\r\n    createEmptyChildrenChoixCity(){\r\n        for(let n = 0; n < NbMaxCityReturnJson; n++){\r\n            let tmp = new divChoixCityChild();\r\n            this.addChilds(tmp);\r\n        }\r\n    }\r\n    fillChilds(address){\r\n        if(address.length > 0){\r\n            let l = address.length;\r\n            if (this.#childs.length < address.length){\r\n                l = this.#childs.length;\r\n            }\r\n            this.#nChildAffich = l;\r\n            for(let n = 0; n < this.#nChildAffich; n++) {\r\n                this.#childs[n].setDatas(address[n]);\r\n                this.#childs[n].setTextFromAddres(address[n]);\r\n            }\r\n            this.affichChilds();\r\n        }\r\n    }\r\n    affichChilds(){\r\n        for(let n = 0; n < this.#nChildAffich; n++) {\r\n            if (this.#childs[n].getTextContent() !==''&& this.#childs[n] !== undefined && this.#childs[n] !== null) {\r\n                this.#childs[n].attachToParent();\r\n                this.#childs[n].putText();\r\n                this.#parent.show();\r\n            }\r\n        }\r\n    }\r\n    hideChilds(){\r\n        this.#parent.hide();\r\n    }\r\n    setSelectedChild(id){\r\n        for(let n = 0; n < this.#childs.length ; n++) {\r\n            if (this.#childs[n].getId() === id){\r\n                this.#selectedChild = this.#childs[n];\r\n            }\r\n        }\r\n    }\r\n    getDatafromId(id){\r\n        this.setSelectedChild(id);\r\n        return this.#selectedChild.getDatas();\r\n    }\r\n}\r\n\r\nfunction idAlea(){\r\n    const phrase = \"abcdefghijklmnopqrstuvwxyz1234567890\";\r\n    let id = '';\r\n    for (let i = 0; i < 15; i++) {\r\n        let a = Math.floor(Math.random() * phrase.length);\r\n        id += phrase[a];\r\n    }\r\n    return id;\r\n}\r\n\r\nexport const FormActions = class{\r\n    #all;\r\n    #actual;\r\n    #ag;\r\n    #inputs;\r\n    #lastInputValues;\r\n    fromToTag;\r\n\r\n    constructor(){\r\n        this.#ag = new ApiGouv();\r\n        this.#inputs = new FormAddressInputs();\r\n        this.#all = {};\r\n        this.#all[inputAddressTagName] = new FullChoixFormAddress(typageAddressChoix);\r\n        this.#all[inputZipCodeTagName] = new FullChoixFormAddress(typageZipCodeChoix);\r\n        this.#all[inputCityTagName] =    new FullChoixFormAddress(typageCityChoix);\r\n\r\n        this.#lastInputValues = {};\r\n        this.#lastInputValues[inputAddressTagName] =    '';\r\n        this.#lastInputValues[inputZipCodeTagName] =    '';\r\n        this.#lastInputValues[inputCityTagName] =       '';\r\n\r\n        this.fromToTag = {};\r\n        this.fromToTag[typageAddressChoix] =    inputAddressTagName;\r\n        this.fromToTag[typageZipCodeChoix] =    inputZipCodeTagName;\r\n        this.fromToTag[typageCityChoix] =       inputCityTagName;\r\n    }\r\n    actionsClickInput(idtag){\r\n        let difVal = false;\r\n        this.#actual = this.#all[idtag];\r\n        let val = this.#inputs.getValueIdTag(idtag);\r\n        if (val !== this.#lastInputValues[idtag]) { difVal = true;}\r\n        this.#lastInputValues[idtag] = val;\r\n        if (val.length > miniInput[idtag]) { difVal = true;}{\r\n            if (difVal) {\r\n                this.#ag.getDataIdTag(val, idtag)\r\n                    .then(result => this.#actual.fillChilds(result));\r\n            } else {\r\n                this.#actual.affichChilds();\r\n            }\r\n        }\r\n    }\r\n    actionsClickOnChoix(from, id){\r\n        let idtag = this.fromToTag[from];\r\n        let datas = this.#all[idtag].getDatafromId(id);\r\n        this.#inputs.fillInputsfrom(from,datas);\r\n        this.#all[idtag].hideChilds();\r\n    }\r\n    actionClickOther(){\r\n        for(let a in this.#all){\r\n            if (this.#all.hasOwnProperty(a)) {\r\n                this.#all[a].hideChilds();\r\n            }\r\n        }\r\n    }\r\n    onInput(idtag){\r\n        this.#inputs.setNaInput(idtag);\r\n        this.actionsClickInput(idtag);\r\n    }\r\n}\r\n\r\n\r\nexport function addlisteners() {\r\n    let fA = new FormActions();\r\n    document.addEventListener(\"click\", function (event) {\r\n        let id = event.target.id;\r\n        let from = event.target.getAttribute(divTagType);\r\n        let idTag = event.target.getAttribute(inputTagName);\r\n        if (idTag === inputAddressTagName || idTag === inputCityTagName || idTag === inputZipCodeTagName) {\r\n            fA.actionsClickInput(inputAddressTagName);\r\n        }\r\n        else if (from === typageAddressChoix || from === typageZipCodeChoix || from === typageCityChoix){\r\n            fA.actionsClickOnChoix(from, id);\r\n        }\r\n        else{\r\n            fA.actionClickOther();\r\n        }\r\n\r\n    });\r\n\r\n    setTimeout(function () {\r\n        document.addEventListener(\"input\", function (event) {\r\n            let lenValue = event.target.value.length;\r\n            let idTag = event.target.getAttribute(inputTagName);\r\n            if (lenValue > 3) {\r\n                fA.onInput(idTag);\r\n            }\r\n        });\r\n    }, FormAddrDefaultTimout);\r\n}\r\n\r\nlet inputToFill = {};\r\n\r\ninputToFill[typageAddressChoix] = FiedsNamesAddressJson;\r\n\r\nexport const FormAddressInputs = class {\r\n\r\n    #inputAddress;\r\n    #inputRefAddress;\r\n    #inputNoAddress;\r\n    #inputStreetAddress;\r\n    #inputLatAddress;\r\n    #inputLonAddress;\r\n\r\n    #inputZipCode;\r\n\r\n    #inputCityCode;\r\n    #inputCity;\r\n\r\n    #fromInput;\r\n    #jsonType;\r\n\r\n    constructor() {\r\n        let inputs = document.getElementsByTagName(\"input\");\r\n        if (inputs.length > 0) {\r\n            for (let n = 0; n < inputs.length; n++) {\r\n                let inpid = inputs[n].getAttribute(inputTagName);\r\n                if (inpid === inputAddressTagName) {\r\n                    this.#inputAddress =        inputs[n];\r\n                }\r\n                if (inpid === inputAddressRefTagName) {\r\n                    this.#inputRefAddress = inputs[n];\r\n                }\r\n                if (inpid === inputAddressNoTagName) {\r\n                    this.#inputNoAddress = inputs[n];\r\n                }\r\n                if (inpid === inputAddressStreetTagName) {\r\n                    this.#inputStreetAddress = inputs[n];\r\n                }\r\n                if (inpid === inputAddressLatTagName) {\r\n                    this.#inputLatAddress = inputs[n];\r\n                }\r\n                if (inpid === inputAddressLonTagName) {\r\n                    this.#inputLonAddress = inputs[n];\r\n                }\r\n                if (inpid === inputZipCodeTagName) {\r\n                    this.#inputZipCode = inputs[n];\r\n                }\r\n                if (inpid === inputCityCodeTagName) {\r\n                    this.#inputCityCode = inputs[n];\r\n                }\r\n                if (inpid ===inputCityTagName) {\r\n                    this.#inputCity = inputs[n];\r\n                }\r\n            }\r\n        }\r\n        this.#fromInput = {};\r\n        this.#fromInput[inputAddressTagName] =   this.#inputAddress;\r\n        this.#fromInput[inputZipCodeTagName] =   this.#inputZipCode;\r\n        this.#fromInput[inputCityTagName] =      this.#inputCity;\r\n\r\n        this.#jsonType = {};\r\n        this.#jsonType[typageAddressChoix] =    FiedsNamesAddressJson;\r\n        this.#jsonType[typageZipCodeChoix] =    FieldsNameGeoJson;\r\n        this.#jsonType[typageCityChoix] =       FieldsNameGeoJson;\r\n    }\r\n    getValueIdTag(idtag){\r\n        this.validateInputZipCodeValueFrom(idtag);\r\n        return this.#fromInput[idtag].value;\r\n    }\r\n    validateInputZipCodeValueFrom(from){\r\n        if (from === typageZipCodeChoix){\r\n            let val = this.#inputZipCode.value;\r\n            if (val.length === 4 ){\r\n                this.#inputZipCode.value = \"0\" + val;\r\n            }\r\n        }\r\n    }\r\n    fillAllAddressInputs(address){\r\n        this.#inputAddress.value =          address[FiedsNamesAddressJson.short];\r\n        this.#inputRefAddress.value =       address[FiedsNamesAddressJson.id];\r\n        this.#inputNoAddress.value =        address[FiedsNamesAddressJson.no];\r\n        this.#inputStreetAddress.value =    address[FiedsNamesAddressJson.street];\r\n        this.#inputLatAddress.value =       address[FiedsNamesAddressJson.lat];\r\n        this.#inputLonAddress.value =       address[FiedsNamesAddressJson.lon];\r\n        this.setInputAddressAutoTrue();\r\n    }\r\n    fillZipCode(address, from){\r\n        if (this.condtionToFillZipCode()) {\r\n            let tg = this.#jsonType[from].zipcode;\r\n            this.#inputZipCode.value = address[tg];\r\n            this.setInputZipCodeAutoTrue();\r\n        }\r\n    }\r\n    fillAllCity(address, from){\r\n        if(this.condtionToFillCity()){\r\n            let c = this.#jsonType[from].city;\r\n            let o = this.#jsonType[from].codecity;\r\n            this.#inputCityCode.value = address[o];\r\n            this.#inputCity.value =     address[c];\r\n            this.setInputCityAutoTrue();\r\n        }\r\n    }\r\n    fillInputsfrom(from, datas){\r\n        switch(from){\r\n            case typageAddressChoix:\r\n                this.fillAllAddressInputs(datas);\r\n                this.fillZipCode(datas,from);\r\n                this.fillAllCity(datas, from);\r\n                break;\r\n            case typageZipCodeChoix:\r\n                this.#inputZipCode.value = '';\r\n                this.fillZipCode(datas,from);\r\n                this.fillAllCity(datas, from);\r\n                this.adressNASemi();\r\n                break;\r\n            case typageCityChoix:\r\n                this.#inputCity.value ='';\r\n                this.fillZipCode(datas,from);\r\n                this.fillAllCity(datas, from);\r\n                this.adressNASemi();\r\n                break;\r\n        }\r\n    }\r\n    condtionToFillZipCode(){\r\n        return (this.#inputZipCode.value ===\"\" || this.#inputZipCode.getAttribute(inputTagAuto) === \"true\");\r\n    }\r\n    condtionToFillCity(){\r\n        return (this.#inputCity.value ===\"\" || this.#inputCity.getAttribute(inputTagAuto) === \"true\");\r\n    }\r\n    zipCodeNA(){\r\n        this.setInputZipCodeAutoFalse();\r\n    }\r\n    cityNA(){\r\n        this.#inputCityCode .value = nonAutoDefaultValue;\r\n        this.setInputCityAutoFalse();\r\n    }\r\n    adressNASemi(){\r\n        this.#inputRefAddress.value =       nonAutoDefaultValue;\r\n        this.setInputAddressAutoFalse();\r\n    }\r\n    addressNA(){\r\n        this.#inputRefAddress.value =       nonAutoDefaultValue;\r\n        this.#inputNoAddress.value =        nonAutoDefaultValue;\r\n        this.#inputStreetAddress.value =    nonAutoDefaultValue;\r\n        this.#inputLatAddress.value =       nonAutoDefaultValue;\r\n        this.#inputLonAddress.value =       nonAutoDefaultValue;\r\n        this.setInputAddressAutoFalse();\r\n    }\r\n    setNaInput(idtag){\r\n        switch (idtag){\r\n            case inputAddressTagName:\r\n                this.addressNA();\r\n                break;\r\n            case inputZipCodeTagName:\r\n                this.zipCodeNA();\r\n                break;\r\n            case inputCityTagName:\r\n                this.cityNA();\r\n                break;\r\n        }\r\n    }\r\n    setInputAddressAuto(value='false'){\r\n        this.#inputAddress.setAttribute(inputTagAuto, value);\r\n    }\r\n    setInputZipCodeAuto(value='false'){\r\n        this.#inputZipCode.setAttribute(inputTagAuto, value);\r\n    }\r\n    setInputCityAuto(value='false'){\r\n        this.#inputCity.setAttribute(inputTagAuto, value);\r\n    }\r\n    setInputAddressAutoFalse(){\r\n        this.setInputAddressAuto('false');\r\n    }\r\n    setInputZipCodeAutoFalse(){\r\n        this.setInputZipCodeAuto('false');\r\n    }\r\n    setInputCityAutoFalse(){\r\n        this.setInputCityAuto('false');\r\n    }\r\n    setInputAddressAutoTrue(){\r\n        this.setInputAddressAuto('true');\r\n    }\r\n    setInputZipCodeAutoTrue(){\r\n        this.setInputZipCodeAuto('true');\r\n    }\r\n    setInputCityAutoTrue(){\r\n        this.setInputCityAuto('true');\r\n    }\r\n}\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", function() {\r\n    addlisteners();\r\n});"]}